scalar UUID
scalar DateTime

type Account {
  id: UUID!
  name: String
  bank: String
  created_at: DateTime!
  updated_at: DateTime!
}

type Category {
  id: UUID!
  name: String
  color: String
  created_at: DateTime!
  updated_at: DateTime!
}

type Transaction {
  id: UUID!
  reference: String
  amount: Float
  currency: String
  account: Account
  category: Category
  created_at: DateTime!
  updated_at: DateTime!
}

input UpdateTransactionData {
  reference: String
  amount: Float
  currency: String
  category: UUID
}

input UpdateTransactionInput {
  id: UUID!
  data: UpdateTransactionData
}

type Query {
  transactions(
    cursor: String,
    search: String,
    bank: String,
    account: String,
    startDate: String,
    endDate: String,
    perPage: Int,
  ): [Transaction]!
  transaction(id: String!): Transaction
}

type Mutation {
  updateTransaction(updateTransactionInput: UpdateTransactionInput!): Transaction!
}
